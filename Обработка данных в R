
# Загрузка данных
data <- read_dta("Desktop/data.dta")
dt=data%>% select(idind,year,region,status,popul,marst,OCCUP08,J4_1,J21_3,J8,J161_3Y,J77,J11_1,J32_1,J32,J13_2,J13,J24,J23,J25,diplom,H5,age,J260,J262,J72_171,J72_172,J72_173, J1_1_1,J1_1_2,J1_1_3, J1_1_4, M20_7)
dt=dt%>%rename(work_hours=J8, work_exp= J161_3Y, zp=J13_2, company_size=J13)
# Фильтр на возраст
dt=dt%>% filter((H5==1 & age <= 60 & age >=16) |(H5==2 & age <= 55 & age >=16))

# Обозначаем Na
dt[dt==99999999 | dt==99999998 | dt==99999997   ] <- NA

# Формирование переменных
dt=dt%>%
  mutate(
    educ1=case_when(
      diplom==6~ 1,
      diplom<6 ~ 0), # 1- высшее, 2 - нет
    age_group=case_when(
      age>=16 & age<=24 ~ 1,
      age>=25 & age<=29 ~ 2,
      age>=30 & age<=34 ~ 3,
      age>=35 & age<=39 ~ 4,
      age>=40 & age<=44 ~ 5,
      age>=45 & age<=49 ~ 6,
      age>=50 & age<=54 ~ 7,
      age>=55  ~ 8),
    age_group2=case_when(
      age>=16 & age<=29 ~ 1,
      age>=30 & age<=39 ~ 2,
      age>=40  ~ 3),
    okrug=case_when(
      region==14 | region==33 |region==67 |region==72 |region==135 |region==136 |region==138 |region==140 |region==142 ~ 1, #Центральный
      region==1 | region==89 |region==105 |region==141 |region==200  ~ 2, #"Северо-Западный"
      region==9 | region==39 |region==129 |region==137  ~ 3, #"Южный"
      region==52 | region==77 ~ 4, #"Северо-Кавказский"
      region==10 | region==12 |region==45 |region==47 |region==48 |region==70 |region==100 |region==116 |region==117 ~ 5,#"Приволжский"
      region==46 | region==86 |region==106 |region==107 ~ 6, #"Уральский"
      region==58 | region==66 |region==71 |region==73 |region==84 |region==161 ~ 7, #"Сибирский"
      region==92 | region==93 ~ 8 #"Дальневосточный"
    ),
    city=case_when(
      status==1 & (region==138 | region==141) ~ 1, #"Москва, Санкт-Петербург"
      status==1 & !(region==138 | region==141) ~ 2, #"Областной центр"
      status==2 ~ 3, #"Город"
      status==3 ~ 4, #"ПГТ"
      status==4 ~ 5 #"Село"
    ),
    marst1=case_when(
      !(marst==2 | marst== 6) ~ 0,
      marst==2 | marst== 6 ~ 1),
    foreign_ownership=case_when(
      J24==1~ 1,
      J24==2 ~ 0),
    sector=case_when(
      J4_1==1 | J4_1==2 | J4_1==3|J4_1==4|J4_1==5|J4_1==8 | J4_1==16|J4_1==23|J4_1==24~ 1, #"Промышленность и сельское хозяйство"
      J4_1==6 | J4_1==7 |J4_1==17 ~ 2, #"Строительство, транспорт, связь, ЖКХ"
      J4_1==9 | J4_1==13 ~ 3, #"Органы управления и безопасности"
      J4_1==10| J4_1==11| J4_1==12| J4_1==20| J4_1==25 | J4_1==29|J4_1==32~ 4, #"Социальная сфера"
      J4_1==14| J4_1==18 | J4_1==26~ 5, #"Торговля, бытовое обслуживание, услуги населению"
      J4_1==15| J4_1==21| J4_1==27 ~ 6, #"IT, консалтинговые услуги"
      J4_1==30| J4_1==31 ~ 7, #"СМИ, Реклама, Маркетинг"
      J4_1==22| J4_1==28 ~ 8 #"Другое"
    ),
    prof_group=case_when(
      OCCUP08==1 ~ 1, #"Руководители высшего и среднего звена"
      OCCUP08==2 ~ 2, #"Специалисты высшего уровня квалификации"
      OCCUP08==3| OCCUP08==0 ~ 3, #"Специалисты среднего уровня квалификации"
      OCCUP08==4 ~ 4, #"Cлужащие офисные и по обслуживанию клиентови"
      OCCUP08==5 ~ 5, #"Работники сферы услуг и торговли"
      OCCUP08==6| OCCUP08==7  ~ 6, #"Производственные рабочие"
      OCCUP08==8 ~ 7, #"Операторы машин"
      OCCUP08==9 ~ 8), #"Неквалифицированные рабочие"
    work_cond=case_when(
      J21_3==1~ 1,
      J21_3==2 ~ 0),
    job_satisfaction=case_when(
      !(J1_1_2==4 | J1_1_2==5) ~ 0,
      (J1_1_2==4 | J1_1_2==5) ~ 1),
    second_work=case_when(
      J32_1==1~ 1,
      J32_1==2 ~ 0),
    other_work=case_when(
      J32==1~ 1,
      J32==2 ~ 0),
    ownership=case_when(
      J23==1~ 1,
      J23==2 ~ 0),
    type_of_empl=case_when(
      J11_1==1~ 1,
      J11_1==2 ~ 0),
    budget_comp=case_when(
      J23==1 | J4_1==9 | J4_1==10 | J4_1==11 | J4_1==12 ~ 1,
      J23==2 | (!(J4_1==9 | J4_1==10 | J4_1==11 | J4_1==12)) ~ 0),
    child_under18=case_when(
      J72_173==0 | is.na(J72_173) ~ 0,
      J72_173>=1 & J72_173<=9 ~ 1),
    size=case_when(
      company_size<30 ~ 1,
      company_size>=30 & company_size<=50 ~ 2,
      company_size>=51 & company_size<=100 ~ 3,
      company_size>=101 & company_size<=250 ~ 4,
      company_size>=251 & company_size<=1000 ~ 5,
      company_size>1000 ~ 6),
    disable=case_when(
      M20_7==1 |M20_7==5  | M20_7==99999996  ~ 1,
      !(M20_7==1 |M20_7==5  | M20_7==99999996)~ 0))

# для стажа
dt[dt==99999996] <- 0

# Поэтапно удаляем пропуски
dt2=dt
dt2=dt2 %>%tidyr::drop_na(J77)
# заменяю экстремальные значения по рабочим часам на пропуски
dt2$work_hours[dt2$work_hours>360]<- NA
# почасовая зп
dt2=dt2%>%mutate(wage=zp/work_hours)
dt2=dt2 %>%filter(!(is.na(dt2$wage) & dt2$J77==1))
dt2=dt2 %>%filter(!(is.na(dt2$OCCUP08) & dt2$J77==1))
dt2=dt2 %>%filter(!(is.na(dt2$J4_1) & dt2$J77==1))
dt2=dt2 %>%filter(!(is.na(dt2$type_of_empl) & dt2$J77==1))
dt2=dt2 %>%tidyr::drop_na(J260)
dt2=dt2 %>%tidyr::drop_na(educ1)
dt2=dt2 %>%tidyr::drop_na(marst1)
dt2=dt2 %>%filter(!(is.na(dt2$foreign_ownership) & dt2$J77==1))
dt2=dt2 %>%filter(!(is.na(dt2$work_cond) & dt2$J77==1))
dt2=dt2 %>%filter(!(is.na(dt2$work_exp) & dt2$J77==1))
# удаляю тех, кто сказал, что дети есть но не знает 18 лет им или нет
dt2=dt2 %>%filter(!(is.na(dt2$J72_173) & dt2$J72_171==1))
# size & ownership
dt2=dt2%>% filter(!(is.na(dt2$size) & dt2$J77==1))
dt2=dt2%>% filter(!(is.na(dt2$ownership) & dt2$J77==1))

#удаляю нулевую почасовую
dt3=dt2%>%filter(wage>0 | is.na(wage))
quantile(dt3$wage, probs=c(0.01, 0.99), na.rm=T)

# удаляю верхний/нижний квантиль по зп
# 1% квантиль = 45.45455, 99%= 850 
dt3=dt3%>%filter((wage>=45.45455 & wage<=850) | is.na(wage))
dt3=dt3%>%mutate(ln_wage=log(wage))

# уровень языка
dt3=dt3%>%
  mutate(
    lang_level=case_when(
      J262==1 ~ 1,
      J262==2 ~ 2,
      J262==3 ~ 3,
      is.na(J262) ~ 0))
# опыт
dt3=dt3%>%mutate(work_exp_sq=work_exp*work_exp)

# Cохраняю итоговые данные
dt3=dt3%>%rename(empl=J77, sex= H5)
data_finalfinal=dt3%>%select(idind, year, J260, lang_level, empl, sex, age, age_group,age_group2, marst1, child_under18, educ1, city, okrug, zp, ln_zp, wage, ln_wage, work_exp,work_exp_sq, other_work, work_cond, type_of_empl, sector, prof_group,size, ownership, budget_comp, foreign_ownership, disable)
write.dta(data_finalfinal, file = "data_finalfinal2.dta")

# Часовая зп до и после выбросов
k1=dt2%>%ggplot(aes(x = log(wage))) +
  geom_histogram (aes(y = ..density..), fill="darkseagreen3",  alpha=0.6, binwidth =0.06) + 
  labs(title = " ",
       x = "До чистки выбросов", 
       y = " ",
       fill = " ") + theme(legend.position = "none")+
  geom_density(alpha = .2, fill = "white")+ 
  theme_classic()
k2=dt3%>% ggplot(aes(x = ln_wage)) +
  geom_histogram (aes(y = ..density..), fill="darkseagreen3", alpha=0.6, binwidth =0.06) + 
  labs(title = " ",
       x = "После", 
       y = " ",
       fill = " ") + theme(legend.position = "none")+
  geom_density(alpha = .2, fill = "white")+ 
  theme_classic()
grid.arrange(k1, k2, ncol = 2)

m1=dt2%>%ggplot(aes( y = log(wage))) +
  geom_boxplot(fill="darkseagreen3", alpha=0.6)+ 
  theme_classic()+ 
  labs(title = " ",
       x = "До чистки выбросов", 
       y = " ",
       fill = " ")
m2=dt3%>%ggplot(aes( y = ln_wage)) +      
  geom_boxplot(fill="darkseagreen3", alpha=0.6)+ 
  theme_classic()+ 
  labs(title = " ",
       x = "После", 
       y = " ",
       fill = " ")
grid.arrange(m1, m2, ncol = 2)

# Первичная проверка взаимосвязи 
ggplot(df, aes(x = as.factor(J260), y = ln_wage, fill=as.factor(J260) )) +            # Applying ggplot function
  geom_boxplot(alpha = 0.5)+ 
  theme_classic()+
  scale_fill_manual(name = "Знание иностранного языка", values = c("forestgreen", "red"), labels = c("Знают", "Не знают"))+ 
  labs(title = " ",
       x = "", 
       y = "Логарифм почасовой заработной платы")
ggplot(df, aes(x = ln_wage)) +
  geom_density(aes(group = J260, color=J260), alpha = 0.5) +
  scale_color_manual(name = "Знание иностранного языка", values = c("forestgreen", "red"), labels = c("Знают", "Не знают"))+
  theme_classic() + 
  labs(title = " ",
       x = "Логарифм почасовой заработной платы", 
       y = " ")

# Делаем красивые таблицы для описательных статистик
df=data_finalfinal
df$educ1 <- 
  factor(df$educ1, levels=c(1,0),
         labels=c("Да", 
                  "Нет"))
df$J260 <- 
  factor(df$J260, levels=c(1,2),
         labels=c("Да", 
                  "Нет"))
df$lang_level <- 
  factor(df$lang_level, levels=c(0,1,2,3),
         labels=c("не владеют", 
                  "владеют свободно",
                  "могут изъясняться и достаточно свободно читают", 
                  "могут изъясняться, читают и переводят со словарем"))
df$sex <- 
  factor(df$sex, levels=c(1,2),
         labels=c("Мужской", 
                  "Женский"))
df$marst1 <- 
  factor(df$marst1, levels=c(1,0),
         labels=c("Состоит в браке", 
                  "В браке не состоит"))
df$child_under18 <- 
  factor(df$child_under18, levels=c(1,0),
         labels=c("Да", 
                  "Нет"))
df$age_group <- 
  factor(df$age_group, levels=c(1,2,3,4,5,6,7,8),
         labels=c("16-24", 
                  "25-29",
                  "30-34", 
                  "35-39",
                  "40-44", 
                  "45-49",
                  "50-54", 
                  "55+"))
df$empl <- 
  factor(df$empl, levels=c(1,2),
         labels=c("Работают", 
                  "Безработные"))
df$city <- 
  factor(df$city, levels=c(1,2,3,4,5),
         labels=c("Москва, Санкт-Петербург", 
                  "Областной центр",
                  "Город",
                  "ПГТ",
                  "Село"))
df$okrug <- 
  factor(df$okrug, levels=c(1,2,3,4,5,6,7,8),
         labels=c("Центральный", 
                  "Северо-Западный",
                  "Южный",
                  "Северо-Кавказский",
                  "Приволжский",
                  "Уральский",
                  "Сибирский",
                  "Дальневосточный"))
df$prof_group <- 
  factor(df$prof_group, levels=c(1,2,3,4,5,6,7,8),
         labels=c("Руководители высшего и среднего звена", 
                  "Специалисты высшего уровня квалификации",
                  "Специалисты среднего уровня квалификации",
                  "Cлужащие офисные и по обслуживанию клиентови",
                  "Работники сферы услуг и торговли",
                  "Производственные рабочие",
                  "Операторы машин",
                  "Неквалифицированные рабочие"))
df$sector <- 
  factor(df$sector, levels=c(1,2,3,4,5,6,7,8),
         labels=c("Промышленность и сельское хозяйство", 
                  "Строительство, транспорт, связь, ЖКХ",
                  "Органы управления и безопасности",
                  "Социальная сфера",
                  "Торговля, бытовое обслуживание, услуги населению",
                  "IT, консалтинговые услуги",
                  "СМИ, Реклама, Маркетинг",
                  "Другое"))
df$size <- 
  factor(df$size, levels=c(1,2,3,4,5,6),
         labels=c("<30", 
                  "30-50",
                  "51-100", 
                  "101-250",
                  "251-1000", 
                  ">1000"))
df$disable <- 
  factor(df$disable, levels=c(1,0),
         labels=c("Да", 
                  "Нет"))
df$other_work <- 
  factor(df$other_work, levels=c(1,0),
         labels=c("Да", 
                  "Нет"))
df$work_cond <- 
  factor(df$work_cond, levels=c(1,0),
         labels=c("Да", 
                  "Нет"))
df$type_of_empl <- 
  factor(df$type_of_empl, levels=c(1,0),
         labels=c("Официальное", 
                  "Не официальное"))
df$ownership <- 
  factor(df$ownership, levels=c(1,0),
         labels=c("Государство", 
                  "Не государство"))
df$budget_comp <- 
  factor(df$budget_comp, levels=c(1,0),
         labels=c("Да", 
                  "Нет"))
df$foreign_ownership <- 
  factor(df$foreign_ownership, levels=c(1,0),
         labels=c("Да", 
                  "Нет"))

label(df$educ1) <- "Высшее образование"
label(df$J260) <- "Знание ин. языка"
label(df$lang_level) <- "Степень владения иностранным языком"
label(df$sex) <- "Пол респондента"
label(df$marst1) <- "Семейное положение"
label(df$child_under18) <- "Наличие детей младше 18 лет"
label(df$age_group) <- "Возрастная группа"
label(df$empl) <- "Занятость"
label(df$city) <- "Тип населенного пункта"
label(df$okrug) <- "Федеральный округ"
label(df$prof_group) <- "Профессиональная группа"
label(df$sector) <- "Сектор"
label(df$size) <- "Размер предприятия"
label(df$disable) <- "Статус инвалида"
label(df$other_work) <- "Вторичная занятость"
label(df$work_cond) <- "Тяжелые условия труда"
label(df$type_of_empl) <- "Тип трудоустройства"
label(df$ownership) <- "Форма собственности предприятия"
label(df$budget_comp) <- "Бюджетное учреждение"
label(df$foreign_ownership) <- "Иностранная собственность"
label(df$ln_wage) <- "Логарифм почасовой заработной платы"
label(df$work_exp) <- "Стаж"

#Личные характеристики для всей выборки
table1(~  sex + age + marst1 + child_under18 + disable +educ1 + city + okrug + J260 + lang_level |factor(year) , data=df)

# Только Работники 
table1(~  J260 + lang_level + sex + age_group + marst1 + child_under18 + disable +educ1 + city + okrug + ln_wage + work_exp + other_work + work_cond + type_of_empl + sector +prof_group +size + ownership + budget_comp + foreign_ownership|factor(year) , data=df%>%filter(empl=="Работают"))

# Показатели владения по годам, работники
table1(~ J260 |year, data=df%>%filter(empl=="Работают"))
table1(~ lang_level |year, data=df%>%filter(empl=="Работают"))

table1(~ J260 |sex*year, data=df%>%filter(empl=="Работают"))
table1(~ J260 |age_group*year, data=df%>%filter(empl=="Работают"))
table1(~ J260 |marst1*year , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |child_under18*year , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |disable*year , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |educ1*year , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |city*year , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |okrug*year , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |other_work*year , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |work_cond*year , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |type_of_empl*year , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |ownership*year, data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |budget_comp*year , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |foreign_ownership*year , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |sector*year , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |prof_group*year , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |size*year , data=df%>%filter(empl=="Работают"), overall=F)

# Показатели владения overall, работники
table1(~ J260 |sex, data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |age_group, data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |marst1 , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |child_under18 , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |disable, data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |educ1 , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |city , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |okrug , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |other_work , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |work_cond , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |type_of_empl , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |ownership , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |budget_comp , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |foreign_ownership , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |sector , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |prof_group , data=df%>%filter(empl=="Работают"), overall=F)
table1(~ J260 |size , data=df%>%filter(empl=="Работают"), overall=F)

# Показатели владения по годам, все
table1(~ J260 |year, data=df )
table1(~ lang_level |year, data=df )

table1(~ J260 |sex*year, data=df )
table1(~ J260 |age_group*year, data=df )
table1(~ J260 |marst1*year , data=df , overall=F)
table1(~ J260 |child_under18*year , data=df , overall=F)
table1(~ J260 |disable*year , data=df , overall=F)
table1(~ J260 |educ1*year , data=df , overall=F)
table1(~ J260 |city*year , data=df , overall=F)
table1(~ J260 |okrug*year , data=df , overall=F)

# Показатели владения overall, все
table1(~ J260 |sex, data=df , overall=F)
table1(~ J260 |age_group, data=df , overall=F)
table1(~ J260 |marst1 , data=df , overall=F)
table1(~ J260 |child_under18 , data=df , overall=F)
table1(~ J260 |disable, data=df , overall=F)
table1(~ J260 |educ1 , data=df , overall=F)
table1(~ J260 |city , data=df , overall=F)
table1(~ J260 |okrug , data=df , overall=F)

# Cross-tab для уравнения самоотбора
table1(~   sex + age_group + marst1 + child_under18 + disable +educ1 + city + okrug |empl , data=df)


